<?xml version="1.0" encoding="UTF-8"?>
<launch>
    
  <!-- Run the map server -->
  <arg name="map" default="$(find particle_filter)/maps/jackal_race.yaml"/>
  <node type="map_server" pkg="map_server" name="map_server_node" output="screen" args="$(arg map)">
    <param name="frame_id" value="/map" />
  </node>

  <!-- Arguments that can be passed to this launch file from the CLI, for example paused:=true -->
  <arg name="paused" default="false"/>
  <arg name="use_sim_time" default="true"/>
  <arg name="gui" default="true"/>
  <arg name="headless" default="false"/>
  <arg name="debug" default="false"/>
  <arg name="physics" default="ode"/>
  <arg name="extra_gazebo_args" default="--verbose"/>

  <!-- Change the name of the world to be launched as required -->
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="world_name" value="$(find particle_filter)/worlds/jackal_race.world"/>
    <arg name="debug" value="$(arg debug)" />
    <arg name="gui" value="$(arg gui)" />
    <arg name="paused" value="$(arg paused)"/>
    <arg name="use_sim_time" value="$(arg use_sim_time)"/>
    <arg name="headless" value="$(arg headless)"/>
    <arg name="extra_gazebo_args" value="$(arg extra_gazebo_args)"/>
    <arg name="physics" default="$(arg physics)"/>
  </include>

  <!-- Arguments for spawn_in_free_space_node with defaults provided -->
  <!-- The name of the package where SDF file is located -->
  <arg name="package_name" default="particle_filter"/>
  <!-- The relative path of the SDF file inside the package, including .sdf extension -->
  <arg name="relative_path" default="/urdf/turtlebot2.urdf"/>
  <!-- Assign the name of the model in Gazebo -->
  <arg name="model_name_in_simulation" default="turtlebot2"/>
  <!-- Lenght of one side of a square shape model/robot footprint in meters -->
  <arg name="footprint_side" default="0.4"/>

  <node name="spawn_in_free_space_node" pkg="particle_filter" type="random_spawn_in_free_space.py" output="screen">
    <!-- Set a private parameters in the node's ~/local namespace -->
    <param name="package_name" type="string" value="$(arg package_name)"/>
    <param name="relative_path" type="string" value="$(arg relative_path)"/>
    <param name="model_name_in_simulation" type="string" value="$(arg model_name_in_simulation)"/>
    <param name="footprint_side" value="$(arg footprint_side)"/>
  </node>

</launch>
